{"cells":[{"cell_type":"markdown","metadata":{"id":"IB9xmk6GmX8Z"},"source":["# Autoencoder for the Kolmogorov Flow\n","\n","In this session, you will need to use what you learned in the previous notebooks to develop a particular neural network called an autoencoder.\n","The Kolmogorov flow is governed by the following equation:\n","\\begin{align}\n","    \\nabla \\cdot \\mathbf{u} &= 0\\\\\n","   \\partial_t \\mathbf{u} + \\mathbf{u} \\cdot \\nabla \\mathbf{u} &= -\\nabla p + \\frac{1}{Re} \\Delta \\mathbf{u} + \\mathbf{f}\n","\\end{align}\n","where $\\mathbf{u} = (u,v)$ is the flow velocity over the domain $(x,y)\\in \\Omega = [0,2\\pi]\\times[0,2\\pi]$ with periodic boundary conditions and $p$ is the pressure field.\n","In the Kolmogorov flow, the forcing term, $\\mathbf{f}$ is $\\mathbf{f} = (sin(k_fy),0)$.\n","\n","The Kolmogorov flow admits a laminar solution $u= \\frac{Re}{k_f^2} \\sin(k_fy)$, $v=0$ which is unstable for large enough $Re$ and $k_f$."]},{"cell_type":"markdown","metadata":{"id":"4dHP6_9cmX8d"},"source":["## 1. Import librairies"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eA5vwZ6XmX8e"},"outputs":[],"source":["import numpy as np\n","import tensorflow as tf\n","# from datetime import datetime\n","import matplotlib.pyplot as plt\n","import h5py\n","from tensorflow.keras.layers import Input, Dense, Conv2D, MaxPool2D, UpSampling2D, concatenate, BatchNormalization, Conv2DTranspose, Flatten, Reshape, AveragePooling2D\n","from tensorflow.keras.optimizers import Adam \n","\n"]},{"cell_type":"markdown","metadata":{"id":"IEm7mhXKmX8f"},"source":["# 2. Read dataset"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PwPP52lnczsQ","executionInfo":{"status":"ok","timestamp":1642776855687,"user_tz":-60,"elapsed":13932,"user":{"displayName":"Mick Hekkema","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14588855259162105764"}},"outputId":"942cd07a-c311-4dd0-c141-87e7d4676683"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JuUg6C1OmX8f","executionInfo":{"status":"ok","timestamp":1642777524339,"user_tz":-60,"elapsed":331,"user":{"displayName":"Mick Hekkema","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14588855259162105764"}},"outputId":"14ba1921-e8ba-43e4-c9db-d97c976c9923","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["(1000, 24, 24, 1)\n"]}],"source":["hf = h5py.File('/content/drive/MyDrive/Kolmogorov_Re50.0_T2000_DT01.h5','r')\n","Nx = 24\n","Nu = 1\n","t = np.array(hf.get('t'))\n","u_all = np.zeros((Nx,Nx,len(t),Nu))\n","u_all[:,:,:,0] = np.array(hf.get('u_refined'))\n","# u_all[:,:,:,1] = np.array(hf.get('v_refined'))\n","u_all = np.transpose(u_all,[2,0,1,3])\n","hf.close()\n","print(u_all.shape)\n","\n","# normalize data\n","u_min = np.amin(u_all[:,:,:,0])\n","u_max = np.amax(u_all[:,:,:,0])\n","u_all[:,:,:,0] = (u_all[:,:,:,0] - u_min) / (u_max - u_min)\n","if Nu==2:\n","    v_min = np.amin(u_all[:,:,:,1])\n","    v_max = np.amax(u_all[:,:,:,1])\n","    u_all[:,:,:,1] = (u_all[:,:,:,1] - v_min) / (v_max - v_min)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":false,"id":"rhqnwjf4mX8g","colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"status":"ok","timestamp":1642777526561,"user_tz":-60,"elapsed":266,"user":{"displayName":"Mick Hekkema","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14588855259162105764"}},"outputId":"ceaee2e0-0a62-4007-c70c-3bf9deddf38b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.contour.QuadContourSet at 0x7f2420550390>"]},"metadata":{},"execution_count":24},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAALoAAAD4CAYAAABbnvyWAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAVmElEQVR4nO2dXYweV3nH/w921quarWUXs7X8tS1OLHxTUyKK1KgKhqA0Ny5SL5qL4guk7UUi8ZELLPUC1KvcADetUBclSlrR9AKIYlWoJXUgVqUKkVRpcBJiu8hxd9msHRVtVkL2Yufpxc4k45d3Zs7Hc855zsz5Sat9P2fOO/M7z/vMM+c9Q8yMQmHovC91AwqFGBTRC6OgiF4YBUX0wigoohdGwfaoK5vdyTvm9sRcZSfbrr/T+Txd/7Xzsnn2Duf3SnJrdjyx7FdvLb/FzHunPRdV9B1ze/Dhk1+Mucpedl263vn8zOsrzsvePLrf+b2SrB+ZTd0EK3Zduu7U5hcfe+SNtueiij42mp0kpfSu4sSmL+j4MJ7vtRZiCTDz+orXt4Mvuy5dDyqSD9PaJt3WEtF72Dy6X1TQvmWFjvzaonuszjf6iA7oymFjRH4NkT32N0wR3YAU+XVo4VOmMinWGzV1uTUDbByi1ufnrqQbYLZ+ZFZFpJuklj1UZ4uZyqTcvqoi+sYh6uwIYyZ0dA9N6iCiSvSaVLJ3RTYtNfFQhEplfJZr874+Z1SKDhTZpxGjPCklu2/HWT8ya5RSmWYBakXXSkrZY607dZphesxgEwxVi64xqgPpI3sMUsguHcWbqBY9JdpkT9G5YuTWgLnggHvwUy96yiqMphNJQ8RWcB8X1IueGs0HpzEIlcLYBBGJYFfGunhSyx6yIpK6Q0meVIoteE2J6AaY7JzUMobGNLJ3vS6V5EAR3ZhUsmvqQK618Zi5eBsldbHAZDyM5LBeTZI36UplfFKckIWHIrolprID7nm7VsFDVaFiVNbUi55yRGMbpiMdJ4WdJr5WqZuELLPGKh+rFl2j5DUuw3pzkHqSnKN4E7Wia5a8RusYdilSS37j8GbrczvemLFaZ6m6eDLUs6epJL9xePPdv77X2aAyoucQzZvUUgwluoeQ3ETwkPRGdCI6SEQ/JKJXiegVIvp89fgeInqWiC5W/3dLNCg3yZvY1Is1Eqr9oSS3eZ9J6nITwCPMfAzAxwE8RETHAJwGcJaZ7wRwtrrvhUbJXU5g5CR83dZQgndtO5MUpQ/T9/emLsy8CmC1ur1BRK8B2A/gJIB7q5c9CeBHAL5s39QtNEk+bedsHCLrNjbl0ZTWxOiEMVOVG4c3ew9OrXJ0IloA8BEAPwYwX3UCAHgTwHzLexYBLALA9l3TsxtNkgNb7ZEuf03KFUv82N8sJtstdD4+DWPRiej9AL4L4AvM/DbRex+ImZmIptrKzEsAlgBgdv/B33iNNslr6nbVO066nSYCmnQGTSlSKslNSo1GohPRHdiS/NvM/L3q4TUi2sfMq0S0D8BVm8ZpFXyS1HPN5ILWSF5jUnUhAI8BeI2Zv9546gyAU9XtUwCeMV1pLpIX+jE5WJc46GzD9MSRSdXljwH8JYATRPRS9fcAgEcB3EdEFwF8qrrfybbNtJJrOiAcAqmjuM3ZUZOqy38AaPtEnzReU0S6hNY2m2yupJbcFpVnRl2x/RVMEd4NDZLbjnUZjOguaYlvdG/u8DEcd0gMxqpZOHANAHB5eeolh8TJXnTfvFsqumudJViKEJJP3jaV3jaaA5mPXpQ8uLRdls0JpdxnCJaUvIum9NJkKXrImV9NmbvCxpE654geopNOi9yXl/caRXSXaA5klrrEmsfbJo2ZJnGos6kxsRXcJ5pLCN63rbMQPXb92/cgNWfBgTipls1BaJfkpttadeoytuvsaMBF8lQnhWwCirqIrkmwsdXbhyo5oER0TXJPY+hnUzVWhSQlBxKKrl3uSYYqu4/kKQZquR7/RBV92/V3shO8yZBk943isSX3PcBXkbrkRCjZfcQzlUBjitIklOSA8qqLVkJ8K7nuzNxLmTW+kvftkxLRFTH58z2T16ZixxszYumLj+SmQadEdEdCHmv0DS9wkVxr2uIque05lhLRPQh9cBr6B9q++ER118qKa4AponsSoxKjTXAffEqHPt+i2Yk+TarUJcshlR1tMY3qPoOyJPavWtFtxEk1OdDkOovsbsNo2ySX3I+qRJe+xF9uox5DEeNAVFJwQH7fJRc9pBgphNcquzZiSg4kED2FBFon+5RAa0WmixipyiRRRb81m75sH1J6rZE8xKSpru1oI3QASp66pERSeq2S16SWPaXkwMhFb+JaudEiuMv87bFILTlQRG9Fi8CSxI7qIU8ATbJ+ZBZ4vv359ElzQQxNg8H6onjsokCJ6AVRYkbxGpNv3xLRR0ioqK5VcqBE9KzxuaiYzdh3k+X0kfr8RRE9U7oE7ZNX4qBUWvCZ11duu795dH/ve2wKBkX0TJCslsT4faotJmLXuFTE4p4ZnZHbYVprxpJoOJvpQ8qcfJJsI7p2CVw7ovbPlRKfcxvZiq6dIQqb86UoS3mxEATxs5499AWWInpBNRKSA2YX1H2ciK4S0fnGY18lopWJ644WBozWg3/TFNEkoj8B4P4pj3+DmY9Xf9+3aFuhYERXNDe5YnUTkwvqniOiBeMljoTJX767XltniEjk532S2+JTdXmYiD4L4AUAjzDzL6e9iIgWASwCwPZduz1Wp4O2qR2mPT4k+W1+srd+ZNZZ9r6c3LWa5Xow+k0AHwJwHMAqgK+1vZCZl5j5bma+e9vOnY6r04HtrFQ3Dm/e9jcETEVbPzJrPWVJKMkBx4jOzGv1bSL6FoB/cW5BBkhJ6rMcTd8ONr9m6ovuUlWVPpxEJ6J9zLxa3f0MgPNdr88ZLZHYtx3SHcVWdp/1SNArOhE9BeBeAB8gomUAXwFwLxEdB8AALgP4K5HWFIIR4hgi9O9UJc8um1RdHpzy8GNiLVCMlmgeCp9p5GpCyS49hKKMdWlh6JI3aX5WF+klZQ81RqiIXrgN1yjvK3voa5wW0acQMpovHLhm/R6by4lLcePwppPsNaEuIOa6b4rokXARvOu9MeT3yeGlUxDf4FNEj4CP5LbLDNEBXKK79Pp9KaIPjFAdQKJC47NeX4roI2GyA7iKH0t46eOkIvoUJK+hGSJtkaDZLhfpQwkfqhBQRC+8K30K4WOdryiiF95FQvhU9HW0InpAJNKWE/MXel/z3Npd3utp4iO8VoroLUjm6TaYiN33HinxFw5cy0J2k7SpiK4EF8FNluUr/VCiuwrRTU4Xx54QKHXOKUUtvYTwGmU3PQhOMq/L3BW+7a8gn2dPcmL+gve3hrZSqU2lJ6ro2zbd5weJ2SGkorltBAwtO+CfImmT3ZQyU1dgtMruI/zCgWvJhbet2xfRJxhKbm6CRHRPLbwpKg5GtRBK8svLe62EeG7tLtEqTBcn5i+IVWZcsf3WczkLWyJ6JDSmMDWxOlUbMb4VshI95AHpmFKWaUhUZXwwld11TE1WoociluSao3pNDrJPoy8Ijlr0FFPF5SB7SkKlMVmJLnV2NLe5EMcke1cgaEtbTFLabESXkDw3wZuMSfYQZCG6lOS5U2R3R73ovpLnHMWnEVr2lJ3JZdCYaSVOtegSkg+RMUZ239+mqhbdh6FKXvPc2l2DEj70EOBBij50yZtIyp5bx7E5gah2rItr2pKj5NOimdaxMSHoi+YSU2qoFd0FTZKbiNq1g5vPmSwrd9lDo1L0WDOsNkkx3NT052mmox/r1MNF+NzSFlvU5eg2kkuUDlOPqa7X39cGm4M1W2lzKym6oEp0W8l9SC34NGLLnrpy4yu56JWjY2HaaB/BtYk9jb50xuZHHBrTkVQzCaiI6EXy25GM7Bq4vLz33T9bpCYxTS66ieS+uXhOktcMQXZXuUPQKzoRPU5EV4nofOOxPUT0LBFdrP7vdlm5qeSuaMzDJdEi0SQxBTfNBkxy9CcA/C2Af2g8dhrAWWZ+lIhOV/e/LN04zVG8r4QnkR+blB9tf3gdEq0dDzC7oO45IlqYePgktq4mDQBPAvgRDEUPLbnkTvc5ASM18aep7PVrU6FZcsC96jLPzKvV7TcBzLe9kIgWASwCwPZdZhmOi+SxpmiWWLat9NInlqRJLblJ8PQuLzIzE1Hr6BpmXgKwBACz+w92jsIZouBd67MRXqvsoSWXuiKeq+hrRLSPmVeJaB+Aqz6NSCU4kPZX71Iz3aYiViSXkN21vHgGwKnq9ikAz7gsxKVsKFVJST2PSRPTdph+7hgCxk5XfM+Em5QXnwLwnwCOEtEyEX0OwKMA7iOiiwA+Vd03opY7leBA+pmppmHa8TTJnhMmVZcHW576pO3KeMZ+pi0tVZRYmMyFmDpfT9WJfFIYNWNdmoTYOTlIXqNZ9tTfFG2ZQFZXpQtVLQgh+Z/vetHodd9Z/6jT8iVmua2Rkj215F30pcJJRU999tIFU8Gnvd5W+j7Zba4r5Cu7ZslNiCr6zMzNaDVeacltBe9aho3wGmTPXXJAwejFEGiUfHJ5Nsvs+zyhg4eWsTQ+DE70nA46Y8vuI2zusg9KdA05ucvyTdfhI7uEqFplNznHMhjRc4rk0zAVvqQxW5j+qLxGVXnRlVCSh47mbet0LUm2IS1nisum+36GqKL/9vbrxlKa1JBzj+Jt9MluU4kJGYFDXTY9RJvVRvTUEqeI5pPrl5I9JL7RPVYqpFb0gozssUidu5+Yv4DnO54fzMGoJKmjeRNNbdGI6ajPInoGdMmeOsVLic1nL6IPgDHKbvuZi+hTkC7vSVBSmPdw6dhF9IEwlqju+jmL6C2UqK4Pn84cVfTd234Vc3WjY8hR3fezlYjeQYnqOpDowNFFH+OOisnQorrU5ykRvQeNUb3wm/QF0CSi5xbVtcnet/2GEtUlP0cS0bWJY8J31j+qpt1a2pET0Qd15b6Tmu3P7ZtpyGztl1+0Ph9V9F/e+q2YqwvOZKeNIX7ugSIVZZiuIG0SSnWAIrk7RfQIFEHTo1b05g8KhlJFKKRDXR192tWMc50ov+CH5H5XI3rf5bqL7AUfVIguLXHqa9wX9JE8R7cR8rm1uzrzdZOUp+T74ySZ6K4Rt0120+X1dRZJTNsk3Z4hfZvVn8V3GyUR3XdHNGV1WZbUxmtbru/7fNo1JMmb+O6zqKK/fXNWbEdILMdn44UUyrW0OlTJm7hum+Q5ugY0C6K5bamxkV5F1aVQ8KUvIHhFdCK6DGADwC0AN5n5bp/lDZW+eQlTT+fWJPYl1mMhkbp8gpnfEljOoLCZdHPytSlEa7aheXso0pccPQC+s9jGmPK5uR4NbQmNr+gM4AdExAD+npmXBNqULdLTNIeUzLatGr51fPAV/R5mXiGiDwJ4loh+xsznmi8gokUAiwCw44NznqvTS8i5yKVTCYm2mi5DS4fwEp2ZV6r/V4noaQAfA3Bu4jVLAJYAYO7o77LP+rRiI07zUt59VzvuWlcu1wu1WWfITuEsOhHtBPA+Zt6obn8awN+ItSwTTHfktGvVTz5mI76N8LlcELetnRIdwCeizwN4mojq5fwTM/+rd4sywkSgaYL3vdZF+CEj8RmdRWfmnwP4A+8WZIq05JPvc0lrCu2UM6OBcJW8+X7fZRTeo4juQF80lxS0CC9DEd2SmJJPLrcI704R3QINB35FeDeK6IaEPPh0oQhvRxHdAGnJ564w5q7InDsrwptRBnX1EDJdacq+cYi8luVz8qlvWb5oKJUW0TuImZPX0vsKX6Mpyre1JWYHKKnLFC4v73Uev+KLVEqTAzE7YxF9Ag2VlbHJHkP4InqFbRSvCbWTxiQ7ED66jzZH1xC5+5i7wmI5ew64DGozZVSiS8vtEoVsI/XYZAfCDGobRerimpZ04fpV6yKtZN09F6RTmUFH9BzSExsk6+7akY7ogxM9hty+0aaW1CdKS9fdNVFy9A5iRW/Jr9SNQ+SdkgxZeBsWDlzDGx3PZ5+jh8i/2whRApMSdGw5vC1ZRvQUuXfIOq9EKtN8f87R3SVtMfnxdDaipzywjHWqWiKVAYYhvCmmMwSoFn0Mck8iJTswzhp8GypFTyW4phF/UuQU3W3TFpv5XlSJHltwrWJLRvWaoUV320mNVIgeU3CtcsdgaLLbkFT0nMuCuaJVdtu0xXYOyuiil+idHq2yu2B6hY6oJ4w2N+P0q/KD4X40DRTzPeVvEjxV5OhSFLntyakq00Wf7IMQvQjuz9BHRmY91qWkKGGImdLEmgkgm4geUmjTHTvESNfGkA5YAYWix4rQLlFrKPmsKUP6vMlFj516SA6aAoYhQR9DiO7RRU+ZU4fIPUNIoKXsF4NYV/eIejBKm+miQkh5JGvSWiUP2a4YRYWsqy6mxJLHR3hNJ3BSEVL25Dl6aFLIY5PDj13uSbpkr1Mclw4xaNE1SNQmvYa25YZPxB+s6C4i7bp0vfW59SOzPs0BUOROiVeOTkT3E9HrRHSJiE5LNcoXacnr5+u/Qn74XCJ9G4C/A3AfgGUAPyGiM8z8qlTjbPCJlrby1q+XiPKFOPhE9I8BuMTMP2fmTQD/DOCkTLPM8a1W+EToEt3zwSdH3w/gfxv3lwH80eSLiGgRwGJ198aFr3zpvMc6JfgAgLfElva8gja4McQ2HG57IvjBKDMvAVgCACJ6gZnvDr3OLkobxtkGn9RlBcDBxv0D1WOFgjp8RP8JgDuJ6PeIaAbAXwA4I9OsQkEW59SFmW8S0cMA/g3ANgCPM/MrPW9bcl2fIKUNW4yqDcRcTmIUhs8oBnUVCkX0wiiIIrqWoQJEdJmIfkpELxHRC5HW+TgRXSWi843H9hDRs0R0sfq/O0EbvkpEK9W2eImIHgjchoNE9EMiepWIXiGiz1ePR9kWwUVvDBX4UwDHADxIRMdCr7eDTzDz8Yg15CcA3D/x2GkAZ5n5TgBnq/ux2wAA36i2xXFm/n7gNtwE8AgzHwPwcQAPVR5E2RYxIrqKoQKpYOZzAP5v4uGTAJ6sbj8J4M8StCEqzLzKzP9V3d4A8Bq2zq5H2RYxRJ82VGB/hPVOgwH8gIherIYmpGKemVer228CmE/UjoeJ6OUqtQmaPjUhogUAHwHwY0TaFmM7GL2Hmf8QW2nUQ0T0J6kbxFv13RQ13m8C+BCA4wBWAXwtxkqJ6P0AvgvgC8z8dvO5kNsihuhqhgow80r1/yqAp7GVVqVgjYj2AUD1/2rsBjDzGjPfYuZ3AHwLEbYFEd2BLcm/zczfqx6Osi1iiK5iqAAR7SSiufo2gE8DSDWS8gyAU9XtUwCeid2AWq6KzyDwtiAiAvAYgNeY+euNp+JsC2YO/gfgAQAXAPwPgL+Osc4pbfh9AP9d/b0Sqx0AnsJWavBrbB2ffA7A72CrwnARwL8D2JOgDf8I4KcAXq5k2xe4DfdgKy15GcBL1d8DsbZFGQJQGAVjOxgtjJQiemEUFNELo6CIXhgFRfTCKCiiF0ZBEb0wCv4fVSpCgige+g4AAAAASUVORK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}],"source":["# visualization of the dataset\n","%matplotlib inline\n","fig = plt.figure()\n","ax = fig.add_subplot(121)\n","ax.contourf(u_all[50,:,:,0])\n","# ax2 = fig.add_subplot(122)\n","# ax2.contourf(u_all[0,:,:,1])"]},{"cell_type":"markdown","metadata":{"id":"uETvu-zSmX8h"},"source":["# 3. Prepare dataset"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CnZ8arjfmX8h"},"outputs":[],"source":["val_ratio = int(np.round(0.75*len(u_all)))\n","test_ratio = int(np.round(0.95*len(u_all)))\n","\n","u_train = u_all[:val_ratio,:,:,:].astype('float32')\n","u_val = u_all[val_ratio:test_ratio,:,:,:].astype('float32')\n","u_test = u_all[test_ratio:,:,:,:].astype('float32')\n","#del u_all\n"]},{"cell_type":"markdown","metadata":{"id":"ATy7X-ktmX8i"},"source":["# 4. Define the network"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"08DdZ4I7mX8i","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1642777530467,"user_tz":-60,"elapsed":535,"user":{"displayName":"Mick Hekkema","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14588855259162105764"}},"outputId":"12388f61-518b-4b38-abbf-34ea52deb776"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_13\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_9 (InputLayer)        [(None, 24, 24, 1)]       0         \n","                                                                 \n"," conv2d_16 (Conv2D)          (None, 24, 24, 512)       5120      \n","                                                                 \n"," max_pooling2d_16 (MaxPoolin  (None, 12, 12, 512)      0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_17 (Conv2D)          (None, 12, 12, 256)       1179904   \n","                                                                 \n"," max_pooling2d_17 (MaxPoolin  (None, 6, 6, 256)        0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_18 (Conv2D)          (None, 6, 6, 128)         295040    \n","                                                                 \n"," max_pooling2d_18 (MaxPoolin  (None, 3, 3, 128)        0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_19 (Conv2D)          (None, 3, 3, 64)          73792     \n","                                                                 \n"," max_pooling2d_19 (MaxPoolin  (None, 1, 1, 64)         0         \n"," g2D)                                                            \n","                                                                 \n","=================================================================\n","Total params: 1,553,856\n","Trainable params: 1,553,856\n","Non-trainable params: 0\n","_________________________________________________________________\n","Model: \"model_14\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_10 (InputLayer)       [(None, 1, 1, 64)]        0         \n","                                                                 \n"," conv2d_transpose_21 (Conv2D  multiple                 73856     \n"," Transpose)                                                      \n","                                                                 \n"," up_sampling2d_17 (UpSamplin  multiple                 0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_transpose_22 (Conv2D  multiple                 295168    \n"," Transpose)                                                      \n","                                                                 \n"," up_sampling2d_18 (UpSamplin  multiple                 0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_transpose_23 (Conv2D  multiple                 1180160   \n"," Transpose)                                                      \n","                                                                 \n"," up_sampling2d_19 (UpSamplin  multiple                 0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_transpose_24 (Conv2D  multiple                 4609      \n"," Transpose)                                                      \n","                                                                 \n","=================================================================\n","Total params: 1,553,793\n","Trainable params: 1,553,793\n","Non-trainable params: 0\n","_________________________________________________________________\n","Model: \"model_12\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_9 (InputLayer)        [(None, 24, 24, 1)]       0         \n","                                                                 \n"," conv2d_16 (Conv2D)          (None, 24, 24, 512)       5120      \n","                                                                 \n"," max_pooling2d_16 (MaxPoolin  (None, 12, 12, 512)      0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_17 (Conv2D)          (None, 12, 12, 256)       1179904   \n","                                                                 \n"," max_pooling2d_17 (MaxPoolin  (None, 6, 6, 256)        0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_18 (Conv2D)          (None, 6, 6, 128)         295040    \n","                                                                 \n"," max_pooling2d_18 (MaxPoolin  (None, 3, 3, 128)        0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_19 (Conv2D)          (None, 3, 3, 64)          73792     \n","                                                                 \n"," max_pooling2d_19 (MaxPoolin  (None, 1, 1, 64)         0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_transpose_20 (Conv2D  (None, 1, 1, 64)         36928     \n"," Transpose)                                                      \n","                                                                 \n"," up_sampling2d_16 (UpSamplin  (None, 3, 3, 64)         0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_transpose_21 (Conv2D  multiple                 73856     \n"," Transpose)                                                      \n","                                                                 \n"," up_sampling2d_17 (UpSamplin  multiple                 0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_transpose_22 (Conv2D  multiple                 295168    \n"," Transpose)                                                      \n","                                                                 \n"," up_sampling2d_18 (UpSamplin  multiple                 0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_transpose_23 (Conv2D  multiple                 1180160   \n"," Transpose)                                                      \n","                                                                 \n"," up_sampling2d_19 (UpSamplin  multiple                 0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_transpose_24 (Conv2D  multiple                 4609      \n"," Transpose)                                                      \n","                                                                 \n","=================================================================\n","Total params: 3,144,577\n","Trainable params: 3,144,577\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}],"source":["input_img = Input(shape=(Nx,Nx,Nu))\n","\n","nb_layer = 0\n","\n","act = 'tanh'\n","\n","x = Conv2D(512,(3,3), padding='same', activation=act)(input_img)\n","x = MaxPool2D((2,2), padding='same')(x)\n","x = Conv2D(256,(3,3), padding='same', activation=act)(x)\n","x = MaxPool2D((2,2), padding='same')(x)\n","x = Conv2D(128,(3,3), padding='same', activation=act)(x)\n","x = MaxPool2D((2,2), padding='same')(x)\n","x = Conv2D(64,(3,3), padding='same', activation=act)(x)\n","encoded = MaxPool2D((3,3), padding='same')(x)\n","\n","x = Conv2DTranspose(64,(3,3), padding='same', activation=act)(encoded)\n","x = UpSampling2D((3,3))(x)\n","x = Conv2DTranspose(128,(3,3), padding='same', activation=act)(x)\n","x = UpSampling2D((2,2))(x)\n","x = Conv2DTranspose(256,(3,3), padding='same', activation=act)(x)\n","x = UpSampling2D((2,2))(x)\n","x = Conv2DTranspose(512,(3,3), padding='same', activation=act)(x)\n","x = UpSampling2D((2,2))(x)\n","decoded = Conv2DTranspose(Nu,(3,3), activation='linear', padding='same')(x)\n","\n","autoencoder = tf.keras.models.Model(input_img,decoded)\n","encoder = tf.keras.models.Model(input_img,encoded)\n","\n","# definition of the decoder\n","encoded_input = Input(shape=(1,1,encoded.shape[3]))\n","deco = autoencoder.layers[-7](encoded_input) # we re-use the same layers as the ones of the autoencoder\n","for i in range(6):\n","    deco = autoencoder.layers[-6+i](deco)\n","\n","decoder = tf.keras.models.Model(encoded_input,deco)\n","\n","encoder.summary()\n","decoder.summary()\n","autoencoder.summary()"]},{"cell_type":"markdown","metadata":{"id":"fWxyxA25mX8j"},"source":["# 5. Training the Network\n","We use the difference between the network output and the real image to calculate or cost/loss function. As an optimizier we choose the AdamOptimizer and tell it which function value to minimize"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oQ8r_MxpmX8j"},"outputs":[],"source":["autoencoder.compile(optimizer=Adam(learning_rate=0.0001),loss='mse')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ngi45OSXmX8k"},"outputs":[],"source":["checkpoint_filepath = './checkpoint'\n","model_checkpoint_callback = tf.keras.callbacks.ModelCheckpoint(\n","    filepath=checkpoint_filepath,\n","    save_weights_only=True,\n","    monitor='val_loss',\n","    mode='min',\n","    save_best_only=True)\n","early_stop_callback = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=10)"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"a3XkdF-KmX8k","colab":{"base_uri":"https://localhost:8080/"},"outputId":"2f5ef650-9f40-43f0-f89f-3d6547eb5d05","executionInfo":{"status":"ok","timestamp":1642777756521,"user_tz":-60,"elapsed":206769,"user":{"displayName":"Mick Hekkema","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14588855259162105764"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/1000\n","38/38 [==============================] - 2s 27ms/step - loss: 0.0425 - val_loss: 0.0157\n","Epoch 2/1000\n","38/38 [==============================] - 1s 23ms/step - loss: 0.0123 - val_loss: 0.0109\n","Epoch 3/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0079 - val_loss: 0.0059\n","Epoch 4/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0050 - val_loss: 0.0040\n","Epoch 5/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0044 - val_loss: 0.0038\n","Epoch 6/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0042 - val_loss: 0.0036\n","Epoch 7/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0041 - val_loss: 0.0036\n","Epoch 8/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0040 - val_loss: 0.0035\n","Epoch 9/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0040 - val_loss: 0.0033\n","Epoch 10/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0039 - val_loss: 0.0033\n","Epoch 11/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0038 - val_loss: 0.0032\n","Epoch 12/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0038 - val_loss: 0.0032\n","Epoch 13/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0037 - val_loss: 0.0031\n","Epoch 14/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0037 - val_loss: 0.0031\n","Epoch 15/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0036 - val_loss: 0.0031\n","Epoch 16/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0036 - val_loss: 0.0030\n","Epoch 17/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0036 - val_loss: 0.0030\n","Epoch 18/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 0.0035 - val_loss: 0.0029\n","Epoch 19/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0036 - val_loss: 0.0031\n","Epoch 20/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 0.0035 - val_loss: 0.0029\n","Epoch 21/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0035 - val_loss: 0.0028\n","Epoch 22/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0035 - val_loss: 0.0029\n","Epoch 23/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0034 - val_loss: 0.0030\n","Epoch 24/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0033 - val_loss: 0.0028\n","Epoch 25/1000\n","38/38 [==============================] - 1s 24ms/step - loss: 0.0033 - val_loss: 0.0027\n","Epoch 26/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0032 - val_loss: 0.0029\n","Epoch 27/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0033 - val_loss: 0.0027\n","Epoch 28/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0033 - val_loss: 0.0028\n","Epoch 29/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0034 - val_loss: 0.0027\n","Epoch 30/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0033 - val_loss: 0.0027\n","Epoch 31/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0031 - val_loss: 0.0026\n","Epoch 32/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0030 - val_loss: 0.0025\n","Epoch 33/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0030 - val_loss: 0.0026\n","Epoch 34/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0030 - val_loss: 0.0025\n","Epoch 35/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0029 - val_loss: 0.0025\n","Epoch 36/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0029 - val_loss: 0.0025\n","Epoch 37/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0029 - val_loss: 0.0024\n","Epoch 38/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0028 - val_loss: 0.0025\n","Epoch 39/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0029 - val_loss: 0.0024\n","Epoch 40/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0028 - val_loss: 0.0024\n","Epoch 41/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0027 - val_loss: 0.0024\n","Epoch 42/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0027 - val_loss: 0.0024\n","Epoch 43/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0027 - val_loss: 0.0023\n","Epoch 44/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0027 - val_loss: 0.0023\n","Epoch 45/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0027 - val_loss: 0.0024\n","Epoch 46/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0028 - val_loss: 0.0023\n","Epoch 47/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0026 - val_loss: 0.0022\n","Epoch 48/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0026 - val_loss: 0.0023\n","Epoch 49/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0026 - val_loss: 0.0023\n","Epoch 50/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0026 - val_loss: 0.0022\n","Epoch 51/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0027 - val_loss: 0.0035\n","Epoch 52/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0032 - val_loss: 0.0023\n","Epoch 53/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0025 - val_loss: 0.0022\n","Epoch 54/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0024 - val_loss: 0.0021\n","Epoch 55/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0024 - val_loss: 0.0021\n","Epoch 56/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0024 - val_loss: 0.0021\n","Epoch 57/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0023 - val_loss: 0.0020\n","Epoch 58/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0023 - val_loss: 0.0020\n","Epoch 59/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0023 - val_loss: 0.0020\n","Epoch 60/1000\n","38/38 [==============================] - 1s 23ms/step - loss: 0.0022 - val_loss: 0.0020\n","Epoch 61/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0022 - val_loss: 0.0019\n","Epoch 62/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0022 - val_loss: 0.0019\n","Epoch 63/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0022 - val_loss: 0.0019\n","Epoch 64/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0022 - val_loss: 0.0019\n","Epoch 65/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0021 - val_loss: 0.0019\n","Epoch 66/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0021 - val_loss: 0.0020\n","Epoch 67/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0022 - val_loss: 0.0018\n","Epoch 68/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0021 - val_loss: 0.0018\n","Epoch 69/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0021 - val_loss: 0.0019\n","Epoch 70/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0020 - val_loss: 0.0018\n","Epoch 71/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0020 - val_loss: 0.0018\n","Epoch 72/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0020 - val_loss: 0.0018\n","Epoch 73/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0020 - val_loss: 0.0017\n","Epoch 74/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0019 - val_loss: 0.0017\n","Epoch 75/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0019 - val_loss: 0.0017\n","Epoch 76/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 0.0019 - val_loss: 0.0017\n","Epoch 77/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0019 - val_loss: 0.0017\n","Epoch 78/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0019 - val_loss: 0.0017\n","Epoch 79/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0019 - val_loss: 0.0017\n","Epoch 80/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0019 - val_loss: 0.0019\n","Epoch 81/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0025 - val_loss: 0.0026\n","Epoch 82/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0023 - val_loss: 0.0018\n","Epoch 83/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0018 - val_loss: 0.0016\n","Epoch 84/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0018 - val_loss: 0.0016\n","Epoch 85/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0018 - val_loss: 0.0016\n","Epoch 86/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0017 - val_loss: 0.0015\n","Epoch 87/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0017 - val_loss: 0.0015\n","Epoch 88/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0017 - val_loss: 0.0015\n","Epoch 89/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0017 - val_loss: 0.0015\n","Epoch 90/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0017 - val_loss: 0.0015\n","Epoch 91/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 0.0017 - val_loss: 0.0015\n","Epoch 92/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0017 - val_loss: 0.0015\n","Epoch 93/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0016 - val_loss: 0.0015\n","Epoch 94/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0016 - val_loss: 0.0015\n","Epoch 95/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0016 - val_loss: 0.0014\n","Epoch 96/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0016 - val_loss: 0.0014\n","Epoch 97/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0016 - val_loss: 0.0014\n","Epoch 98/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0015 - val_loss: 0.0014\n","Epoch 99/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0015 - val_loss: 0.0014\n","Epoch 100/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 0.0015 - val_loss: 0.0014\n","Epoch 101/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0015 - val_loss: 0.0014\n","Epoch 102/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0015 - val_loss: 0.0014\n","Epoch 103/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0016 - val_loss: 0.0015\n","Epoch 104/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0016 - val_loss: 0.0014\n","Epoch 105/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0015 - val_loss: 0.0014\n","Epoch 106/1000\n","38/38 [==============================] - 1s 21ms/step - loss: 0.0015 - val_loss: 0.0013\n","Epoch 107/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0014 - val_loss: 0.0013\n","Epoch 108/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0014 - val_loss: 0.0013\n","Epoch 109/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0014 - val_loss: 0.0013\n","Epoch 110/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0014 - val_loss: 0.0014\n","Epoch 111/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0014 - val_loss: 0.0014\n","Epoch 112/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0014 - val_loss: 0.0013\n","Epoch 113/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0014 - val_loss: 0.0013\n","Epoch 114/1000\n","38/38 [==============================] - 1s 23ms/step - loss: 0.0014 - val_loss: 0.0012\n","Epoch 115/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0014 - val_loss: 0.0014\n","Epoch 116/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0014 - val_loss: 0.0013\n","Epoch 117/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0014 - val_loss: 0.0013\n","Epoch 118/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0014 - val_loss: 0.0012\n","Epoch 119/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0013 - val_loss: 0.0012\n","Epoch 120/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0013 - val_loss: 0.0012\n","Epoch 121/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0013 - val_loss: 0.0012\n","Epoch 122/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0013 - val_loss: 0.0012\n","Epoch 123/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0013 - val_loss: 0.0012\n","Epoch 124/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0013 - val_loss: 0.0012\n","Epoch 125/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0013 - val_loss: 0.0012\n","Epoch 126/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0013 - val_loss: 0.0012\n","Epoch 127/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0012 - val_loss: 0.0012\n","Epoch 128/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0012 - val_loss: 0.0012\n","Epoch 129/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0012 - val_loss: 0.0012\n","Epoch 130/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0012 - val_loss: 0.0012\n","Epoch 131/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0013 - val_loss: 0.0012\n","Epoch 132/1000\n","38/38 [==============================] - 1s 21ms/step - loss: 0.0012 - val_loss: 0.0011\n","Epoch 133/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0012 - val_loss: 0.0012\n","Epoch 134/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0013 - val_loss: 0.0012\n","Epoch 135/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0013 - val_loss: 0.0011\n","Epoch 136/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0013 - val_loss: 0.0012\n","Epoch 137/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0012 - val_loss: 0.0011\n","Epoch 138/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0012 - val_loss: 0.0011\n","Epoch 139/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0012 - val_loss: 0.0011\n","Epoch 140/1000\n","38/38 [==============================] - 1s 21ms/step - loss: 0.0012 - val_loss: 0.0011\n","Epoch 141/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 0.0011 - val_loss: 0.0011\n","Epoch 142/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0011 - val_loss: 0.0011\n","Epoch 143/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0012 - val_loss: 0.0011\n","Epoch 144/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0012 - val_loss: 0.0011\n","Epoch 145/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0012 - val_loss: 0.0011\n","Epoch 146/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0012 - val_loss: 0.0011\n","Epoch 147/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0011 - val_loss: 0.0011\n","Epoch 148/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 0.0011 - val_loss: 0.0010\n","Epoch 149/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 0.0011 - val_loss: 0.0011\n","Epoch 150/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0011 - val_loss: 0.0010\n","Epoch 151/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0011 - val_loss: 0.0010\n","Epoch 152/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0011 - val_loss: 0.0011\n","Epoch 153/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0012 - val_loss: 0.0011\n","Epoch 154/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0011 - val_loss: 0.0010\n","Epoch 155/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0011 - val_loss: 9.9663e-04\n","Epoch 156/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0011 - val_loss: 0.0011\n","Epoch 157/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0010 - val_loss: 9.8119e-04\n","Epoch 158/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 0.0010 - val_loss: 9.6741e-04\n","Epoch 159/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 0.0010 - val_loss: 9.7515e-04\n","Epoch 160/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 9.9873e-04 - val_loss: 9.6172e-04\n","Epoch 161/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 9.9579e-04 - val_loss: 9.5340e-04\n","Epoch 162/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 9.8920e-04 - val_loss: 9.7111e-04\n","Epoch 163/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 9.9824e-04 - val_loss: 9.9840e-04\n","Epoch 164/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 9.7534e-04 - val_loss: 9.6498e-04\n","Epoch 165/1000\n","38/38 [==============================] - 1s 21ms/step - loss: 9.8625e-04 - val_loss: 9.2991e-04\n","Epoch 166/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 9.6057e-04 - val_loss: 9.2914e-04\n","Epoch 167/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 9.4732e-04 - val_loss: 9.4621e-04\n","Epoch 168/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 9.4501e-04 - val_loss: 0.0011\n","Epoch 169/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 9.6713e-04 - val_loss: 9.9096e-04\n","Epoch 170/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 9.5244e-04 - val_loss: 9.0575e-04\n","Epoch 171/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 9.1576e-04 - val_loss: 9.2480e-04\n","Epoch 172/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 9.0482e-04 - val_loss: 9.2044e-04\n","Epoch 173/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 9.0520e-04 - val_loss: 9.1523e-04\n","Epoch 174/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 9.1073e-04 - val_loss: 9.0352e-04\n","Epoch 175/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 9.5701e-04 - val_loss: 9.1872e-04\n","Epoch 176/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 9.2318e-04 - val_loss: 8.9354e-04\n","Epoch 177/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 9.2105e-04 - val_loss: 9.9465e-04\n","Epoch 178/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 9.3770e-04 - val_loss: 9.1784e-04\n","Epoch 179/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 8.7594e-04 - val_loss: 8.7299e-04\n","Epoch 180/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 8.5497e-04 - val_loss: 8.5359e-04\n","Epoch 181/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 8.4629e-04 - val_loss: 8.6351e-04\n","Epoch 182/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 8.6256e-04 - val_loss: 8.6940e-04\n","Epoch 183/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 8.8294e-04 - val_loss: 8.8297e-04\n","Epoch 184/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 8.8479e-04 - val_loss: 8.8014e-04\n","Epoch 185/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 8.5867e-04 - val_loss: 8.6968e-04\n","Epoch 186/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 8.2081e-04 - val_loss: 8.3444e-04\n","Epoch 187/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 8.1132e-04 - val_loss: 8.2864e-04\n","Epoch 188/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 7.9947e-04 - val_loss: 8.2219e-04\n","Epoch 189/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 7.9803e-04 - val_loss: 8.5090e-04\n","Epoch 190/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 7.9619e-04 - val_loss: 8.4809e-04\n","Epoch 191/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 7.9272e-04 - val_loss: 8.6034e-04\n","Epoch 192/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 8.1057e-04 - val_loss: 8.7322e-04\n","Epoch 193/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 7.8295e-04 - val_loss: 8.0669e-04\n","Epoch 194/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 7.6141e-04 - val_loss: 8.1252e-04\n","Epoch 195/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 7.5245e-04 - val_loss: 8.0141e-04\n","Epoch 196/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 7.4604e-04 - val_loss: 8.3352e-04\n","Epoch 197/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 7.5369e-04 - val_loss: 8.0407e-04\n","Epoch 198/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 7.5243e-04 - val_loss: 8.2300e-04\n","Epoch 199/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 7.3358e-04 - val_loss: 7.9737e-04\n","Epoch 200/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 7.2698e-04 - val_loss: 7.9862e-04\n","Epoch 201/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 7.3090e-04 - val_loss: 8.2425e-04\n","Epoch 202/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 7.5289e-04 - val_loss: 8.2499e-04\n","Epoch 203/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 7.6677e-04 - val_loss: 8.5740e-04\n","Epoch 204/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 7.5700e-04 - val_loss: 8.0547e-04\n","Epoch 205/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 7.1140e-04 - val_loss: 7.8110e-04\n","Epoch 206/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 7.0650e-04 - val_loss: 7.6755e-04\n","Epoch 207/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.9266e-04 - val_loss: 7.7022e-04\n","Epoch 208/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 7.1042e-04 - val_loss: 7.7271e-04\n","Epoch 209/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 7.0618e-04 - val_loss: 7.8307e-04\n","Epoch 210/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 6.9273e-04 - val_loss: 7.6674e-04\n","Epoch 211/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 6.7737e-04 - val_loss: 7.5500e-04\n","Epoch 212/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 6.7381e-04 - val_loss: 7.5061e-04\n","Epoch 213/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.6926e-04 - val_loss: 7.6029e-04\n","Epoch 214/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.6208e-04 - val_loss: 7.5067e-04\n","Epoch 215/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.5386e-04 - val_loss: 7.5115e-04\n","Epoch 216/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.5797e-04 - val_loss: 7.7641e-04\n","Epoch 217/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.6620e-04 - val_loss: 7.6329e-04\n","Epoch 218/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 6.6834e-04 - val_loss: 7.4636e-04\n","Epoch 219/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.7437e-04 - val_loss: 7.6788e-04\n","Epoch 220/1000\n","38/38 [==============================] - 1s 16ms/step - loss: 6.7592e-04 - val_loss: 8.0739e-04\n","Epoch 221/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.9769e-04 - val_loss: 7.7167e-04\n","Epoch 222/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.8993e-04 - val_loss: 8.0541e-04\n","Epoch 223/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.5038e-04 - val_loss: 7.5099e-04\n","Epoch 224/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 6.3318e-04 - val_loss: 7.2848e-04\n","Epoch 225/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 6.2029e-04 - val_loss: 7.2237e-04\n","Epoch 226/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 6.1020e-04 - val_loss: 7.1773e-04\n","Epoch 227/1000\n","38/38 [==============================] - 1s 21ms/step - loss: 6.0712e-04 - val_loss: 7.0811e-04\n","Epoch 228/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 6.0820e-04 - val_loss: 7.2252e-04\n","Epoch 229/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.0465e-04 - val_loss: 7.0837e-04\n","Epoch 230/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 5.9682e-04 - val_loss: 7.0497e-04\n","Epoch 231/1000\n","38/38 [==============================] - 1s 21ms/step - loss: 5.9606e-04 - val_loss: 7.0005e-04\n","Epoch 232/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 5.9715e-04 - val_loss: 7.0454e-04\n","Epoch 233/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 5.9715e-04 - val_loss: 7.2413e-04\n","Epoch 234/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.0013e-04 - val_loss: 7.0049e-04\n","Epoch 235/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.9036e-04 - val_loss: 7.0073e-04\n","Epoch 236/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.8922e-04 - val_loss: 7.1136e-04\n","Epoch 237/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.1148e-04 - val_loss: 7.1109e-04\n","Epoch 238/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.0419e-04 - val_loss: 7.0450e-04\n","Epoch 239/1000\n","38/38 [==============================] - 1s 19ms/step - loss: 5.9025e-04 - val_loss: 6.8001e-04\n","Epoch 240/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.8421e-04 - val_loss: 6.9590e-04\n","Epoch 241/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.8759e-04 - val_loss: 7.1604e-04\n","Epoch 242/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.1697e-04 - val_loss: 7.0112e-04\n","Epoch 243/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 6.0295e-04 - val_loss: 7.2150e-04\n","Epoch 244/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.8601e-04 - val_loss: 6.9455e-04\n","Epoch 245/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.9329e-04 - val_loss: 6.8681e-04\n","Epoch 246/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.9486e-04 - val_loss: 7.1537e-04\n","Epoch 247/1000\n","38/38 [==============================] - 1s 25ms/step - loss: 5.7764e-04 - val_loss: 6.6221e-04\n","Epoch 248/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 5.6060e-04 - val_loss: 6.8200e-04\n","Epoch 249/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 5.5556e-04 - val_loss: 6.6350e-04\n","Epoch 250/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 5.6750e-04 - val_loss: 6.8933e-04\n","Epoch 251/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.4882e-04 - val_loss: 6.6367e-04\n","Epoch 252/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 5.4216e-04 - val_loss: 6.9540e-04\n","Epoch 253/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 5.5744e-04 - val_loss: 6.6368e-04\n","Epoch 254/1000\n","38/38 [==============================] - 1s 21ms/step - loss: 5.3696e-04 - val_loss: 6.5804e-04\n","Epoch 255/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.3113e-04 - val_loss: 6.5870e-04\n","Epoch 256/1000\n","38/38 [==============================] - 1s 21ms/step - loss: 5.2739e-04 - val_loss: 6.5059e-04\n","Epoch 257/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 5.3134e-04 - val_loss: 6.7154e-04\n","Epoch 258/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.4329e-04 - val_loss: 6.9331e-04\n","Epoch 259/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.5252e-04 - val_loss: 7.1166e-04\n","Epoch 260/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.6125e-04 - val_loss: 6.7240e-04\n","Epoch 261/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.5015e-04 - val_loss: 6.7504e-04\n","Epoch 262/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 5.4259e-04 - val_loss: 6.5602e-04\n","Epoch 263/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 5.2162e-04 - val_loss: 6.3799e-04\n","Epoch 264/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.1192e-04 - val_loss: 6.3944e-04\n","Epoch 265/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.1720e-04 - val_loss: 6.4877e-04\n","Epoch 266/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.1185e-04 - val_loss: 6.5449e-04\n","Epoch 267/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.0930e-04 - val_loss: 6.4057e-04\n","Epoch 268/1000\n","38/38 [==============================] - 1s 21ms/step - loss: 5.0600e-04 - val_loss: 6.3413e-04\n","Epoch 269/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 5.0496e-04 - val_loss: 6.5948e-04\n","Epoch 270/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 5.3672e-04 - val_loss: 6.6392e-04\n","Epoch 271/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 5.2648e-04 - val_loss: 6.4718e-04\n","Epoch 272/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.1144e-04 - val_loss: 6.4636e-04\n","Epoch 273/1000\n","38/38 [==============================] - 1s 21ms/step - loss: 5.0610e-04 - val_loss: 6.2891e-04\n","Epoch 274/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.0234e-04 - val_loss: 6.3993e-04\n","Epoch 275/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.1226e-04 - val_loss: 6.5831e-04\n","Epoch 276/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.3749e-04 - val_loss: 6.5900e-04\n","Epoch 277/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 5.2539e-04 - val_loss: 6.2544e-04\n","Epoch 278/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.4248e-04 - val_loss: 6.4555e-04\n","Epoch 279/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.0525e-04 - val_loss: 6.4452e-04\n","Epoch 280/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 5.0987e-04 - val_loss: 6.4264e-04\n","Epoch 281/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 4.9512e-04 - val_loss: 6.3300e-04\n","Epoch 282/1000\n","38/38 [==============================] - 1s 20ms/step - loss: 4.8991e-04 - val_loss: 6.1988e-04\n","Epoch 283/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 4.7961e-04 - val_loss: 6.2717e-04\n","Epoch 284/1000\n","38/38 [==============================] - 1s 21ms/step - loss: 4.7936e-04 - val_loss: 6.1919e-04\n","Epoch 285/1000\n","38/38 [==============================] - 1s 21ms/step - loss: 4.7547e-04 - val_loss: 6.1666e-04\n","Epoch 286/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 4.8216e-04 - val_loss: 6.4053e-04\n","Epoch 287/1000\n","38/38 [==============================] - 1s 21ms/step - loss: 4.8691e-04 - val_loss: 6.1294e-04\n","Epoch 288/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 4.8341e-04 - val_loss: 6.2474e-04\n","Epoch 289/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 4.8293e-04 - val_loss: 6.2553e-04\n","Epoch 290/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 4.7704e-04 - val_loss: 6.1812e-04\n","Epoch 291/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 4.7814e-04 - val_loss: 6.2241e-04\n","Epoch 292/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 4.8359e-04 - val_loss: 6.3705e-04\n","Epoch 293/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 4.8746e-04 - val_loss: 6.2223e-04\n","Epoch 294/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 4.7505e-04 - val_loss: 6.1406e-04\n","Epoch 295/1000\n","38/38 [==============================] - 1s 18ms/step - loss: 4.6939e-04 - val_loss: 6.1350e-04\n","Epoch 296/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 4.7021e-04 - val_loss: 6.1754e-04\n","Epoch 297/1000\n","38/38 [==============================] - 1s 17ms/step - loss: 4.7237e-04 - val_loss: 6.1747e-04\n"]}],"source":["nb_epochs = 1000\n","batch_size = 20\n","hist = autoencoder.fit(u_train, u_train, epochs=nb_epochs, batch_size=batch_size,\n","                shuffle=True,validation_data=(u_test, u_test),\n","                       verbose=1,\n","                       callbacks=[model_checkpoint_callback,early_stop_callback])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eGNNcjI5mX8k","colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"status":"ok","timestamp":1642152028722,"user_tz":-60,"elapsed":2129,"user":{"displayName":"Mick Hekkema","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14588855259162105764"}},"outputId":"a7062be6-e4dd-423e-a59c-54d43fa9f8f3"},"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}],"source":["loss_history = hist.history['loss']\n","val_history = hist.history['val_loss']\n","%matplotlib inline\n","plt.plot(loss_history,'b')\n","plt.plot(val_history,'r')\n","plt.title(\"Loss History\")\n","plt.xlabel(\"Epoch\")\n","plt.ylabel(\"Loss\")\n","\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"HTyypK6EmX8k"},"source":["# 6. Visualization of some prediction cases"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"ga9JB_OLmX8l","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1642152031738,"user_tz":-60,"elapsed":679,"user":{"displayName":"Mick Hekkema","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14588855259162105764"}},"outputId":"050ff925-959a-4baf-edd9-704dd52f4a79"},"outputs":[{"output_type":"stream","name":"stdout","text":["(1, 24, 24, 1)\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.contour.QuadContourSet at 0x7ff61e684f10>"]},"metadata":{},"execution_count":48},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"needs_background":"light"}}],"source":["y_nn = autoencoder.predict(u_test[0:1,:,:,:])\n","print(y_nn.shape)\n","%matplotlib inline\n","fig = plt.figure()\n","ax = fig.add_subplot(121)\n","ax.contourf(y_nn[0,:,:,0])\n","ax = fig.add_subplot(122)\n","ax.contourf(u_test[0,:,:,0])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_mz0SnncmX8l","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1642152038553,"user_tz":-60,"elapsed":239,"user":{"displayName":"Mick Hekkema","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14588855259162105764"}},"outputId":"9b47ebe2-1380-4b30-f15e-3846b8e4645d"},"outputs":[{"output_type":"stream","name":"stdout","text":["AE error: 2.9932525649201125e-05\n"]}],"source":["print(f'AE error: {val_history[-1]}')"]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"},"colab":{"name":"AutoEncoder - Test document Mick ","provenance":[],"collapsed_sections":[]}},"nbformat":4,"nbformat_minor":0}